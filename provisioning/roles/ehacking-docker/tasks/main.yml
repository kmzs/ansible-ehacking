---
- name: Set Docker Compose package and command
  set_fact:
    docker_compose_pkg: "{{ 'docker-compose' if ansible_distribution_version == '22.04' else 'docker-compose-v2' }}"
    docker_compose: "{{ 'docker-compose' if ansible_distribution_version == '22.04' else 'docker compose' }}"
  when: 
    - ansible_os_family == "Debian"
    - ansible_distribution == "Ubuntu"

- name: Install Docker and Docker Compose
  apt:
    pkg:
      - docker.io
      - "{{ docker_compose_pkg }}"
    state: latest
  tags: eHacking_vm
  when:
    - ansible_os_family == "Debian"
    - ansible_distribution == "Ubuntu"

- name: Install Docker and Docker Compose (Kali)
  apt:
    pkg:
      - docker.io
    state: latest
  tags: eHacking_vm
  when:
    - ansible_os_family == "Debian"
    - ansible_distribution == "Kali"

- name: Install Docker Compose (Kali)
  get_url:
    url: "https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-linux-{{ ansible_architecture }}"
    dest: "/usr/local/bin/docker-compose"
    mode: '0755'
  when: 
    - ansible_os_family == "Debian"
    - ansible_distribution == "Kali"

- name: Set Docker Compose package and command (Kali)
  set_fact:
    docker_compose: "docker-compose"
  when: 
    - ansible_os_family == "Debian"
    - ansible_distribution == "Kali"

- name:  Adding user '{{ vm_user }}' to group docker
  user:
    name: '{{ vm_user }}'
    groups: docker
    append: yes

- name: Add mappings to /etc/hosts
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: |
      {{ item.ip }} {{ item.name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  loop:
    - { name: attacker.com, ip: 127.0.0.1 }
    - { name: honest-idp.com, ip: 127.0.0.1 }
    - { name: honest-rs.com, ip: 127.0.0.1 }
    - { name: honest-sp.com, ip: 127.0.0.1 }
    - { name: honest-spa.com, ip: 127.0.0.1 }
    - { name: malicious.com, ip: 172.17.0.1 }
  tags: eHacking_vm

- name: Create Application Launcher from template
  ansible.builtin.template:
    src: '{{ config_dir }}/templates/applications/starter.desktop.j2'
    remote_src: yes
    dest: "{{ item }}"
    owner: "{{ vm_user }}"
    group: "{{ vm_user_details.group }}"
    mode: '0755'
  loop:
    - "{{ vm_user_details.home }}/Desktop/starter.desktop"
    - "{{ vm_user_details.home }}/.local/share/applications/starter.desktop"
  notify: trust desktop files
  tags: eHacking_vm

- name: Cloning e-hacking-local-docker-setup configuration {{ vm_user_details.home }}/.hidden
  ansible.builtin.git:
    repo: https://github.com/eHacking-WebSec/e-hacking-local-docker-setup.git
    dest: "{{ vm_user_details.home }}/.hidden"
    single_branch: yes
    version: main
  tags: eHacking_vm

- name: Setup eHacking variant in .env
  ansible.builtin.replace:
    path: "{{ vm_user_details.home }}/.hidden/.env"
    regexp: '^VARIANT="main"$'
    replace: 'VARIANT="{{ ehacking_docker }}"'
  tags: eHacking_vm

# - name: Pull Docker image
#   community.docker.docker_image:
#     name: rubnds/e-hacking
#     tag: "{{ ehacking_docker }}"
#     source: pull
#   tags: eHacking_vm

- name: Pull Docker image (without ansible-community-docker extension)
  ansible.builtin.command:
    cmd: "{{ docker_compose }} pull --quiet"
    chdir: "{{ vm_user_details.home }}/.hidden"
  tags: eHacking_vm

- name: Copy Root CA into System Trust Store
  ansible.builtin.copy:
    src: "{{ config_dir }}/ehacking-ca.cert.pem"
    remote_src: yes
    dest: /usr/local/share/ca-certificates/ehacking-ca.crt
    owner: root
    group: root
    mode: '0644'
  notify:
    - update CA certificates
    - chromium update certificates
    - firefox update certificates
  tags: eHacking_vm