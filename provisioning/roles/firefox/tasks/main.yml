---
- name: Set firefox_pkg based on distribution
  ansible.builtin.set_fact:
    firefox_pkg: "{{ 'firefox-esr' if ansible_distribution == 'Kali' else 'firefox' }}"
  tags: firefox

- name: Set firefox_profile_directory
  ansible.builtin.set_fact:
    firefox_mozilla_directory: "{{ vm_user_details.home }}{{ '/snap/firefox/common' if snap_check.rc == 0 }}/.mozilla"
    firefox_profile_directory: "{{ vm_user_details.home }}{{ '/snap/firefox/common' if snap_check.rc == 0 }}/.mozilla/firefox/ehacking.default"
  when: firefox_profile_directory is undefined
  tags: firefox

- name: Install Firefox Snap
  snap:
    name:
      - firefox
  tags: firefox
  when: snap_check.rc == 0

- name: Install Firefox via apt
  apt:
    pkg: "{{ firefox_pkg }}"
    state: latest
  tags: firefox
  when: snap_check.rc != 0

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ vm_user }}"
    group: "{{ vm_user_details.group }}"
    mode: '0755'
  loop:
    - "{{ firefox_mozilla_directory }}/certificates"
  tags: firefox

- name: Extract configuration
  ansible.builtin.unarchive:
    src: "{{ config_dir }}/firefox.tar.gz"
    dest: "{{ firefox_mozilla_directory }}/"
    remote_src: yes
    creates: "{{ firefox_profile_directory }}"
  tags: firefox

- name: Setz owner
  ansible.builtin.file:
    path: "{{ firefox_mozilla_directory }}"
    owner: "{{ vm_user }}"
    group: "{{ vm_user_details.group }}"
    recurse: yes
  tags: firefox

- name: Create the Firefox certificate database if it does not exist
  ansible.builtin.command: >
    bash -c "certutil -N -d sql:{{ firefox_profile_directory }} -f /dev/null"
  args:
    creates: "{{ firefox_profile_directory }}/cert9.db"
  tags: firefox

- name: Create Firefox policy directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "root"
    group: "root"
    mode: '0755'
  loop:
    - "/etc/firefox/policies/"
  tags: firefox

# - name: Create policies.json from template
#   ansible.builtin.template:
#     src: "{{ config_dir }}/templates/etc_firefox_policies/policies.json.j2"
#     remote_src: yes
#     dest: "/etc/firefox/policies/policies.json"
#     mode: '0644'
#     owner: "root"
#     group: "root"
#   tags:
#     - firefox
#     - system-local

# Needed because for cloud vm Ansible is not executed on the local machine
- name: Create policies.json from template
  ansible.builtin.template:
    src: "{{ local_config_dir }}/templates/etc_firefox_policies/policies.json.j2"
    remote_src: false
    dest: "/etc/firefox/policies/policies.json"
    mode: '0644'
    owner: "root"
    group: "root"
  tags:
    - firefox
    - system-cloud